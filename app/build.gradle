apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    namespace 'com.example.MyGitHub'
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"

        Properties properties = new Properties()
        final File propertiesFile = project.rootProject.file('local.properties')
        if (propertiesFile != null && propertiesFile.exists()) {
            properties.load(propertiesFile.newDataInputStream())
            final String userAccessToken = properties.getProperty("USER_ACCESS_TOKEN")
            if (userAccessToken != null) {
                buildConfigField "String", "USER_ACCESS_TOKEN", properties.getProperty("USER_ACCESS_TOKEN")
            } else {
                buildConfigField "String", "USER_ACCESS_TOKEN", "\"no token at local.properties\""
            }
        } else {
            buildConfigField "String", "USER_ACCESS_TOKEN", "\"no token at local.properties\""
        }
    }

    signingConfigs {
        release {
            keyAlias "github"
            keyPassword "github"
            storeFile file("$rootDir/test.jks")
            storePassword "github"
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            keyAlias "github"
            keyPassword "github"
            storeFile file("$rootDir/test.jks")
            storePassword "github"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.google.code.gson:gson:2.11.0'

    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'

    implementation "androidx.recyclerview:recyclerview:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.1"

    implementation 'io.github.scwang90:refresh-layout-kernel:2.0.5'      //核心必须依赖
    implementation 'io.github.scwang90:refresh-header-classics:2.0.5'    //经典刷新头
    implementation 'io.github.scwang90:refresh-footer-classics:2.0.5'    //经典加载

    implementation 'com.drakeet.multitype:multitype:4.3.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    implementation 'com.facebook.fresco:fresco:2.6.0'
}